@startuml

class EntityId {
  - id: UUID
}

abstract class DomainEntity {
  + getId(): EntityId
  + isNew(): boolean
  ~ setNew(isNew: boolean): boolean
}

class Flight {
  - code: String
  - departure: OffsetDateTime
  - arrival: OffsetDateTime
}

class FlightSeat {
  - name: String
}

enum SeatClass {
  FIRST
  BUSINESS
  ECONOMY
}

class FlightSeatAllocation {

}

class Airport {
  - name: String
  - location: String
  - code: String
  - utcOffset: ZoneId
}

abstract class User {
  - username
  - password
}

class Airline {
  - name
  - code
}

class Administrator {

}

class Customer {
  - givenName
  - surname
  - email
}

DomainEntity -> EntityId: id

Flight -|> DomainEntity

Airline -up-|> User
Administrator -up-|> User
Customer -up-|> User


@enduml