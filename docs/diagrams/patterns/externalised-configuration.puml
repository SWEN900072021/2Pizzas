@startuml

participant compMan as "manager:ComponentManager"
participant ComponentLoader as loader 
participant bean as "bean:Bean"
participant ConfigurationConstructionInterceptor as configInter
participant "configurationContext:ConfigurationContext" as configCtx
participant field as "field:Field"

[-> compMan: init()
activate compMan
compMan -> loader: loaded = load()
loop for bean in loaded
compMan -> bean: construct(manager)
activate bean
bean -> bean: component = build(manager)
activate bean
bean -> configInter: intercept(component, manager)
activate configInter
opt component is annotated with @Configuration
configInter -> compMan: configurationContext = getComponent(ConfigurationContext.class)
activate compMan
deactivate compMan
loop for field of component annotated with @Value
configInter -> field: valueAnnotation = field.getAnnotation(Value.class)
configInter -> configCtx: value = getConfigurationProperty(valueAnnotation.value())
configInter -> field: set(component, value)
configInter --> bean: component 
deactivate configInter
bean --> compMan: component
deactivate bean
deactivate bean
end 
end
end

@enduml